{"version":3,"file":"barba-css.modern.js","sources":["../src/css.ts"],"sourcesContent":["/**\n * @barba/css\n * <br><br>\n * ## Barba CSS.\n *\n * - Add CSS classes\n * - Manage CSS transitions\n *\n * @module css\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IBarbaPlugin,\n  ITransitionData,\n  ITransitionPage,\n} from '@barba/core/src/defs';\n\nimport { Core } from '@barba/core/src/core';\nimport { Logger } from '@barba/core/src/modules/Logger';\n\nimport { ICssCallbacks } from './defs';\n\nimport { version } from '../package.json';\n\nexport class Css implements IBarbaPlugin<{}> {\n  public name = '@barba/css';\n  public version = version;\n  public barba: Core;\n  public logger: Logger;\n\n  public prefix: string = 'barba';\n  public callbacks: ICssCallbacks = {};\n  public cb: any;\n\n  // Check if transition property applied\n  private _hasTransition: boolean = false;\n\n  /**\n   * Plugin installation.\n   */\n  public install(barba: Core) {\n    this.logger = new barba.Logger(this.name);\n    this.logger.info(this.version);\n    this.barba = barba;\n    this._once = this._once.bind(this);\n    this._leave = this._leave.bind(this);\n    this._enter = this._enter.bind(this);\n  }\n\n  /**\n   * Plugin installation.\n   */\n  public init() {\n    // Register hooks to get prefix\n    this.barba.hooks.before(this._getPrefix, this);\n    this.barba.hooks.beforeOnce(this._getPrefix, this);\n\n    // Register hook for CSS classes\n    this.barba.hooks.beforeOnce(this._beforeOnce, this);\n    this.barba.hooks.afterOnce(this._afterOnce, this);\n    this.barba.hooks.beforeLeave(this._beforeLeave, this);\n    this.barba.hooks.afterLeave(this._afterLeave, this);\n    this.barba.hooks.beforeEnter(this._beforeEnter, this);\n    this.barba.hooks.afterEnter(this._afterEnter, this);\n\n    // Override main transitions\n    this.barba.transitions.once = this._once;\n    this.barba.transitions.leave = this._leave;\n    this.barba.transitions.enter = this._enter;\n\n    // Add empty default transition (force prepend)\n    /* istanbul ignore next */\n    this.barba.transitions.store.all.unshift({\n      name: 'barba',\n      once() {}, // tslint:disable-line:no-empty\n      leave() {}, // tslint:disable-line:no-empty\n      enter() {}, // tslint:disable-line:no-empty\n    });\n    this.barba.transitions.store.update();\n  }\n\n  /**\n   * Initial state.\n   */\n  public async start(container: HTMLElement, kind: string): Promise<void> {\n    // Set initial CSS values\n    this.add(container, kind); // CSS: add kind\n    await this.barba.helpers.nextTick();\n    // Apply CSS transition\n    this.add(container, `${kind}-active`); // CSS: add kind-active\n    await this.barba.helpers.nextTick();\n  }\n\n  /**\n   * Next frame state.\n   */\n  public async next(container: HTMLElement, kind: string): Promise<any> {\n    this._hasTransition = this._checkTransition(container);\n\n    if (this._hasTransition) {\n      // We need to listen the end of the animation\n      return new Promise(async resolve => {\n        this.cb = resolve;\n        this.callbacks[kind] = resolve;\n\n        container.addEventListener('transitionend', resolve, false);\n        await this.barba.helpers.nextTick();\n        this.remove(container, kind); // CSS: remove kind\n        // await this.barba.helpers.nextTick();\n        this.add(container, `${kind}-to`); // CSS: add kind-to\n        await this.barba.helpers.nextTick();\n      });\n    } else {\n      this.remove(container, kind); // CSS: remove kind\n      await this.barba.helpers.nextTick();\n      this.add(container, `${kind}-to`); // CSS: add kind-to\n      await this.barba.helpers.nextTick();\n    }\n  }\n\n  /**\n   * Final state.\n   */\n  public async end(container: HTMLElement, kind: string): Promise<void> {\n    this.remove(container, `${kind}-to`); // CSS: remove kind-to\n    this.remove(container, `${kind}-active`); // CSS: remove kind-active\n    container.removeEventListener('transitionend', this.callbacks[kind]);\n    this._hasTransition = false;\n  }\n\n  /**\n   * Add CSS classes.\n   */\n  public add(el: HTMLElement, step: string): void {\n    el.classList.add(`${this.prefix}-${step}`);\n  }\n\n  /**\n   * Remove CSS classes.\n   */\n  public remove(el: HTMLElement, step: string): void {\n    el.classList.remove(`${this.prefix}-${step}`);\n  }\n\n  /**\n   * Get CSS prefix from transition `name` property.\n   */\n  private _getPrefix(data: ITransitionData, t: ITransitionPage): void {\n    this.prefix = t.name || 'barba';\n  }\n\n  /**\n   * Check if CSS transition is applied\n   */\n  private _checkTransition(container: HTMLElement) {\n    // DEV: check for CSS animation property?\n    return getComputedStyle(container).transitionDuration !== '0s';\n  }\n\n  /**\n   * `beforeOnce` hook.\n   */\n  private _beforeOnce(data: ITransitionData): Promise<void> {\n    return this.start(data.next.container, 'once');\n  }\n\n  /**\n   * `once` hook.\n   */\n  private async _once(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await this.barba.hooks.do('once', data, t);\n\n    return this.next(data.next.container, 'once');\n  }\n\n  /**\n   * `afterOnce` hook.\n   */\n  private _afterOnce(data: ITransitionData): Promise<void> {\n    return this.end(data.next.container, 'once');\n  }\n\n  /**\n   * `beforeLeave` hook.\n   */\n  private _beforeLeave(data: ITransitionData): Promise<void> {\n    return this.start(data.current.container, 'leave');\n  }\n\n  /**\n   * `leave` hook.\n   */\n  private async _leave(\n    data: ITransitionData,\n    t: ITransitionPage\n  ): Promise<void> {\n    await this.barba.hooks.do('leave', data, t);\n\n    return this.next(data.current.container, 'leave');\n  }\n\n  /**\n   * `afterLeave` hook.\n   */\n  private _afterLeave(data: ITransitionData): Promise<void> {\n    this.end(data.current.container, 'leave');\n    // For CSS transitions, we need to remove current container\n    // directly after the leave transition\n    this.barba.transitions.remove(data);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * `beforeEnter` hook.\n   */\n  private _beforeEnter(data: ITransitionData): Promise<void> {\n    // Avoid on first load\n    if (this.barba.history.size === 1) {\n      return Promise.resolve();\n    }\n    return this.start(data.next.container, 'enter');\n  }\n\n  /**\n   * `enter` hook.\n   */\n  private async _enter(\n    data: ITransitionData,\n    t: ITransitionPage\n  ): Promise<void> {\n    await this.barba.hooks.do('enter', data, t);\n\n    return this.next(data.next.container, 'enter');\n  }\n\n  /**\n   * `afterEnter` hook.\n   */\n  private _afterEnter(data: ITransitionData): Promise<void> {\n    // Avoid on first load\n    if (this.barba.history.size === 1) {\n      return Promise.resolve();\n    }\n    return this.end(data.next.container, 'enter');\n  }\n}\n\nconst css = new Css();\n\nexport default css;\n"],"names":["css","this","version","install","barba","logger","Logger","name","info","_once","bind","_leave","_enter","init","hooks","before","_getPrefix","beforeOnce","_beforeOnce","afterOnce","_afterOnce","beforeLeave","_beforeLeave","afterLeave","_afterLeave","beforeEnter","_beforeEnter","afterEnter","_afterEnter","transitions","once","leave","enter","store","all","unshift","update","start","container","kind","_this2","add","helpers","nextTick","next","_this4","_hasTransition","_checkTransition","Promise","resolve","cb","callbacks","addEventListener","remove","end","removeEventListener","el","step","classList","prefix","data","t","getComputedStyle","transitionDuration","_this8","current","_this10","history","size","_this12"],"mappings":"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"}